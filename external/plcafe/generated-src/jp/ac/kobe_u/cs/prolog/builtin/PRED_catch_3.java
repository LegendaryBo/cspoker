package jp.ac.kobe_u.cs.prolog.builtin;
import jp.ac.kobe_u.cs.prolog.lang.Predicate;
import jp.ac.kobe_u.cs.prolog.lang.Prolog;
import jp.ac.kobe_u.cs.prolog.lang.StructureTerm;
import jp.ac.kobe_u.cs.prolog.lang.SymbolTerm;
import jp.ac.kobe_u.cs.prolog.lang.Term;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>catch/3</code> defined in builtins.pl<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_catch_3 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol(":", 2);
    static SymbolTerm s2 = SymbolTerm.makeSymbol("jp.ac.kobe_u.cs.prolog.builtin");

    public Term arg1, arg2, arg3;

    public PRED_catch_3(Term a1, Term a2, Term a3, Predicate cont) {
        arg1 = a1;
        arg2 = a2;
        arg3 = a3;
        this.cont = cont;
    }

    public PRED_catch_3(){}

    public void setArgument(Term[] args, Predicate cont) {
        arg1 = args[0];
        arg2 = args[1];
        arg3 = args[2];
        this.cont = cont;
    }

    public int arity() { return 3; }

    public String toString() {
        return "catch(" + arg1 + "," + arg2 + "," + arg3 + ")";
    }

    public Predicate exec(Prolog engine) {
    // catch(A,B,C):-on_exception(B,A,C)
        engine.setB0();
        Term a1, a2, a3, a4, a5;
        a1 = arg1;
        a2 = arg2;
        a3 = arg3;
    // catch(A,B,C):-[on_exception(B,'jp.ac.kobe_u.cs.prolog.builtin':A,'jp.ac.kobe_u.cs.prolog.builtin':C)]
        Term[] y1 = {s2, a1};
        a4 = new StructureTerm(s1, y1);
        Term[] y2 = {s2, a3};
        a5 = new StructureTerm(s1, y2);
        return new PRED_on_exception_3(a2, a4, a5, cont);
    }
}
