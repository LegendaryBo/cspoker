package jp.ac.kobe_u.cs.prolog.builtin;
import jp.ac.kobe_u.cs.prolog.lang.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>repeat/0</code> defined in builtins.pl<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_repeat_0 extends Predicate {
    static Predicate _repeat_0_top = new PRED_repeat_0_top();
    static Predicate _repeat_0_sub_1 = new PRED_repeat_0_sub_1();
    static Predicate _repeat_0_1 = new PRED_repeat_0_1();
    static Predicate _repeat_0_2 = new PRED_repeat_0_2();

    public PRED_repeat_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_repeat_0(){}

    public void setArgument(Term[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String toString() {
        return "repeat";
    }

    public Predicate exec(Prolog engine) {
        engine.cont = cont;
        return _repeat_0_top;
    }
}

class PRED_repeat_0_top extends PRED_repeat_0 {
    public Predicate exec(Prolog engine) {
        engine.setB0();
        return engine.jtry(_repeat_0_1, _repeat_0_sub_1);
    }
}

class PRED_repeat_0_sub_1 extends PRED_repeat_0 {
    public Predicate exec(Prolog engine) {
        return engine.trust(_repeat_0_2);
    }
}

class PRED_repeat_0_1 extends PRED_repeat_0 {
    public Predicate exec(Prolog engine) {
    // repeat:-true
        Predicate cont;
        cont = engine.cont;
    // repeat:-[]
        return cont;
    }
}

class PRED_repeat_0_2 extends PRED_repeat_0 {
    public Predicate exec(Prolog engine) {
    // repeat:-repeat
        Predicate cont;
        cont = engine.cont;
    // repeat:-[repeat]
        engine.cont = cont;
        return _repeat_0_top;
    }
}
