package jp.ac.kobe_u.cs.prolog.builtin;
import jp.ac.kobe_u.cs.prolog.lang.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>is/2</code> defined in builtins.pl<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_is_2 extends Predicate {

    public Term arg1, arg2;

    public PRED_is_2(Term a1, Term a2, Predicate cont) {
        arg1 = a1;
        arg2 = a2;
        this.cont = cont;
    }

    public PRED_is_2(){}

    public void setArgument(Term[] args, Predicate cont) {
        arg1 = args[0];
        arg2 = args[1];
        this.cont = cont;
    }

    public int arity() { return 2; }

    public String toString() {
        return "is(" + arg1 + "," + arg2 + ")";
    }

    public Predicate exec(Prolog engine) {
    // A is B:-A is B
        engine.setB0();
        Term a1, a2;
        a1 = arg1;
        a2 = arg2;
    // A is B:-[A is B]
        //START inline expansion of a(1)is a(2)
        try {
            if (! a1.unify(Arithmetic.evaluate(a2), engine.trail)) {
                return engine.fail();
            }
        } catch (BuiltinException e) {
            e.goal = this;
            throw e;
        }
        //END inline expansion
        return cont;
    }
}
