package jp.ac.kobe_u.cs.prolog.builtin;
import jp.ac.kobe_u.cs.prolog.lang.IntegerTerm;
import jp.ac.kobe_u.cs.prolog.lang.Predicate;
import jp.ac.kobe_u.cs.prolog.lang.Prolog;
import jp.ac.kobe_u.cs.prolog.lang.SymbolTerm;
import jp.ac.kobe_u.cs.prolog.lang.Term;
import jp.ac.kobe_u.cs.prolog.lang.VariableTerm;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>'$trace_goal'/1</code> defined in builtins.pl<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
class PRED_$trace_goal_1 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol("leap");
    static SymbolTerm s2 = SymbolTerm.makeSymbol("no");
    static SymbolTerm s3 = SymbolTerm.makeSymbol("user");
    static IntegerTerm si4 = new IntegerTerm(0);
    static SymbolTerm s5 = SymbolTerm.makeSymbol("trace");

    public Term arg1;

    public PRED_$trace_goal_1(Term a1, Predicate cont) {
        arg1 = a1;
        this.cont = cont;
    }

    public PRED_$trace_goal_1(){}

    public void setArgument(Term[] args, Predicate cont) {
        arg1 = args[0];
        this.cont = cont;
    }

    public int arity() { return 1; }

    public String toString() {
        return "$trace_goal(" + arg1 + ")";
    }

    public Predicate exec(Prolog engine) {
    // '$trace_goal'(A):-'$set_debug_flag'(leap,no),'$get_level'(B),'$meta_call'(A,user,B,0,trace)
        engine.setB0();
        Term a1, a2;
        Predicate p1, p2;
        a1 = arg1;
    // '$trace_goal'(A):-['$set_debug_flag'(leap,no),'$get_level'(B),'$meta_call'(A,user,B,0,trace)]
        a2 = new VariableTerm(engine);
        p1 = new PRED_$meta_call_5(a1, s3, a2, si4, s5, cont);
        p2 = new PRED_$get_level_1(a2, p1);
        return new PRED_$set_debug_flag_2(s1, s2, p2);
    }
}
