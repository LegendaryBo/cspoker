package jp.ac.kobe_u.cs.prolog.builtin;
import jp.ac.kobe_u.cs.prolog.lang.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>java_declared_constructor/2</code> defined in builtins.pl<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_java_declared_constructor_2 extends Predicate {

    public Term arg1, arg2;

    public PRED_java_declared_constructor_2(Term a1, Term a2, Predicate cont) {
        arg1 = a1;
        arg2 = a2;
        this.cont = cont;
    }

    public PRED_java_declared_constructor_2(){}

    public void setArgument(Term[] args, Predicate cont) {
        arg1 = args[0];
        arg2 = args[1];
        this.cont = cont;
    }

    public int arity() { return 2; }

    public String toString() {
        return "java_declared_constructor(" + arg1 + "," + arg2 + ")";
    }

    public Predicate exec(Prolog engine) {
    // java_declared_constructor(A,B):-A=..[C|D],builtin_java_convert_args(D,E),F=..[C|E],java_declared_constructor0(F,G),B=G
        engine.setB0();
        Term a1, a2, a3, a4, a5, a6, a7, a8, a9;
        Predicate p1, p2, p3, p4;
        a1 = arg1;
        a2 = arg2;
    // java_declared_constructor(A,B):-['$univ'(A,[C|D]),builtin_java_convert_args(D,E),'$univ'(F,[C|E]),java_declared_constructor0(F,G),'$unify'(B,G)]
        a3 = new VariableTerm(engine);
        a4 = new VariableTerm(engine);
        a5 = new ListTerm(a3, a4);
        a6 = new VariableTerm(engine);
        a7 = new VariableTerm(engine);
        a8 = new ListTerm(a3, a6);
        a9 = new VariableTerm(engine);
        p1 = new PRED_$unify_2(a2, a9, cont);
        p2 = new PRED_java_declared_constructor0_2(a7, a9, p1);
        p3 = new PRED_$univ_2(a7, a8, p2);
        p4 = new PRED_builtin_java_convert_args_2(a4, a6, p3);
        return new PRED_$univ_2(a1, a5, p4);
    }
}
