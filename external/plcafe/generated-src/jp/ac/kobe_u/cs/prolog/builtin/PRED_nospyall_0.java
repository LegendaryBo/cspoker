package jp.ac.kobe_u.cs.prolog.builtin;
import jp.ac.kobe_u.cs.prolog.lang.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>nospyall/0</code> defined in builtins.pl<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_nospyall_0 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol(":", 2);
    static SymbolTerm s2 = SymbolTerm.makeSymbol("jp.ac.kobe_u.cs.prolog.builtin");
    static SymbolTerm s3 = SymbolTerm.makeSymbol("$current_spypoint", 3);
    static SymbolTerm s4 = SymbolTerm.makeSymbol("leap");
    static SymbolTerm s5 = SymbolTerm.makeSymbol("no");

    public PRED_nospyall_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_nospyall_0(){}

    public void setArgument(Term[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String toString() {
        return "nospyall";
    }

    public Predicate exec(Prolog engine) {
    // nospyall:-retractall('$current_spypoint'(A,B,C)),'$set_debug_flag'(leap,no)
        engine.setB0();
        Term a1, a2;
        Predicate p1;
    // nospyall:-[retractall('jp.ac.kobe_u.cs.prolog.builtin':'$current_spypoint'(A,B,C)),'$set_debug_flag'(leap,no)]
        Term[] y1 = {new VariableTerm(engine), new VariableTerm(engine), new VariableTerm(engine)};
        a1 = new StructureTerm(s3, y1);
        Term[] y2 = {s2, a1};
        a2 = new StructureTerm(s1, y2);
        p1 = new PRED_$set_debug_flag_2(s4, s5, cont);
        return new PRED_retractall_1(a2, p1);
    }
}
