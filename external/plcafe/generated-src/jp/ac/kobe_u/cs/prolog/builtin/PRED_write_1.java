package jp.ac.kobe_u.cs.prolog.builtin;
import jp.ac.kobe_u.cs.prolog.lang.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>write/1</code> defined in builtins.pl<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_write_1 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol("numbervars", 1);
    static SymbolTerm s2 = SymbolTerm.makeSymbol("true");
    static Term[] s3 = {s2};
    static StructureTerm s4 = new StructureTerm(s1, s3);
    static SymbolTerm s5 = SymbolTerm.makeSymbol("[]");
    static ListTerm s6 = new ListTerm(s4, s5);

    public Term arg1;

    public PRED_write_1(Term a1, Predicate cont) {
        arg1 = a1;
        this.cont = cont;
    }

    public PRED_write_1(){}

    public void setArgument(Term[] args, Predicate cont) {
        arg1 = args[0];
        this.cont = cont;
    }

    public int arity() { return 1; }

    public String toString() {
        return "write(" + arg1 + ")";
    }

    public Predicate exec(Prolog engine) {
    // write(A):-current_output(B),write_term(B,A,[numbervars(true)])
        engine.setB0();
        Term a1, a2;
        Predicate p1;
        a1 = arg1;
    // write(A):-[current_output(B),write_term(B,A,[numbervars(true)])]
        a2 = new VariableTerm(engine);
        p1 = new PRED_write_term_3(a2, a1, s6, cont);
        return new PRED_current_output_1(a2, p1);
    }
}
