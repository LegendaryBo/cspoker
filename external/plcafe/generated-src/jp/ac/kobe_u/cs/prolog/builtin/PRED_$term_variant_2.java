package jp.ac.kobe_u.cs.prolog.builtin;
import jp.ac.kobe_u.cs.prolog.lang.Predicate;
import jp.ac.kobe_u.cs.prolog.lang.Prolog;
import jp.ac.kobe_u.cs.prolog.lang.Term;
import jp.ac.kobe_u.cs.prolog.lang.VariableTerm;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>'$term_variant'/2</code> defined in builtins.pl<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
class PRED_$term_variant_2 extends Predicate {

    public Term arg1, arg2;

    public PRED_$term_variant_2(Term a1, Term a2, Predicate cont) {
        arg1 = a1;
        arg2 = a2;
        this.cont = cont;
    }

    public PRED_$term_variant_2(){}

    public void setArgument(Term[] args, Predicate cont) {
        arg1 = args[0];
        arg2 = args[1];
        this.cont = cont;
    }

    public int arity() { return 2; }

    public String toString() {
        return "$term_variant(" + arg1 + "," + arg2 + ")";
    }

    public Predicate exec(Prolog engine) {
    // '$term_variant'(A,B):-new_hash(C),'$term_variant'(A,B,C)
        engine.setB0();
        Term a1, a2, a3;
        Predicate p1;
        a1 = arg1;
        a2 = arg2;
    // '$term_variant'(A,B):-[new_hash(C),'$term_variant'(A,B,C)]
        a3 = new VariableTerm(engine);
        p1 = new PRED_$term_variant_3(a1, a2, a3, cont);
        return new PRED_new_hash_1(a3, p1);
    }
}
