package jp.ac.kobe_u.cs.prolog.builtin;
import jp.ac.kobe_u.cs.prolog.lang.IntegerTerm;
import jp.ac.kobe_u.cs.prolog.lang.Predicate;
import jp.ac.kobe_u.cs.prolog.lang.Prolog;
import jp.ac.kobe_u.cs.prolog.lang.SymbolTerm;
import jp.ac.kobe_u.cs.prolog.lang.Term;
import jp.ac.kobe_u.cs.prolog.lang.VariableTerm;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>call/1</code> defined in builtins.pl<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_call_1 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol("user");
    static IntegerTerm si2 = new IntegerTerm(0);
    static SymbolTerm s3 = SymbolTerm.makeSymbol("interpret");

    public Term arg1;

    public PRED_call_1(Term a1, Predicate cont) {
        arg1 = a1;
        this.cont = cont;
    }

    public PRED_call_1(){}

    public void setArgument(Term[] args, Predicate cont) {
        arg1 = args[0];
        this.cont = cont;
    }

    public int arity() { return 1; }

    public String toString() {
        return "call(" + arg1 + ")";
    }

    public Predicate exec(Prolog engine) {
    // call(A):-'$get_current_B'(B),'$meta_call'(A,user,B,0,interpret)
        engine.setB0();
        Term a1, a2;
        Predicate p1;
        a1 = arg1;
    // call(A):-['$get_current_B'(B),'$meta_call'(A,user,B,0,interpret)]
        a2 = new VariableTerm(engine);
        p1 = new PRED_$meta_call_5(a1, s1, a2, si2, s3, cont);
        return new PRED_$get_current_B_1(a2, p1);
    }
}
