<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="82" height="110" alpha="1.0" currentState="empty">
	<mx:states>
		<mx:State name="empty">
			<mx:SetStyle name="backgroundAlpha" value="0.0"/>
			<mx:SetStyle name="borderColor" value="#FFFFFF"/>
			<mx:SetStyle name="borderStyle" value="none"/>
		</mx:State>
		<mx:State name="filledSeat">
			<mx:RemoveChild target="{image1}"/>
			<mx:SetStyle name="borderStyle" value="solid"/>
			<mx:SetStyle name="borderThickness" value="3"/>
			<mx:SetStyle name="cornerRadius" value="11"/>
			<mx:SetStyle name="themeColor" value="#6C6C6C"/>
			<mx:SetStyle name="borderColor" value="#6F6F6F"/>
			<mx:AddChild position="lastChild">
				<mx:Image x="9" y="8" id="userPhoto" maxHeight="60" maxWidth="60" scaleContent="true" source="images/seat/noimg.jpg"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:TextArea x="10" y="60" id="userName" text="User Name" maxChars="7" wordWrap="false" editable="false" enabled="true" fontSize="11" textAlign="center" selectable="false" width="62" height="24" fontWeight="bold"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:TextArea x="10" y="74" id="numChips" text="$" wordWrap="false" width="62" height="24" fontSize="12" editable="false" enabled="true" textAlign="center" fontWeight="bold" selectable="false"/>
			</mx:AddChild>
		</mx:State>
	</mx:states>
	<mx:Script>
		<![CDATA[
			import models.cards.CardDeck;
			import mx.collections.ArrayCollection;
			import models.table.SeatModel;
			import models.table.TableModel;
			import mx.core.UIComponent;
			import models.player.Player;
			import models.chips.ChipStack;
			
			import flash.filters.DropShadowFilter;  
			
			import models.utils.*;
			import models.utils.easing.Back;
			import models.Config;
			
			import models.*;
			import views.*;
			
			private var masterTable:Table;
			private var tableModel:TableModel;
			private var seatModel:SeatModel;
			private var player:Player;
			private var cardsLocation:Canvas;
			
			private var tablePosition:int = -1;
			
			public var betLocation:Canvas;
			public var chipStack:ChipStack = null;
			public var seatItemsContainer:UIComponent;
			
			public var seatNumber:int;
			
			private var card1:CardDeck;
			private var card2:CardDeck;

			public function initEnd():void{
				
			}
			
			
			public function init(passedTable:Table, passedTableModel:TableModel, passedTablePosition:int, passedBetLocation:Canvas, passedCardsLocation:Canvas):void{
				this.masterTable = passedTable;
				this.tableModel = passedTableModel;
				this.tablePosition = passedTablePosition;
				this.betLocation = passedBetLocation;
				this.seatModel = new SeatModel(this);
				this.player = new Player(this);
				this.cardsLocation = passedCardsLocation;
				
				card1 = new CardDeck(cardsLocation);
				card2 = new CardDeck(cardsLocation);
				
				chipStack = new ChipStack(betLocation);
				
				
				seatItemsContainer = new UIComponent;
				addChild(seatItemsContainer);
			}
			
			public function showBuyInClicked():void{
				Main.table.showBuyInDialog(this)
			}
			
			public function receiveSitIn(passedPlayerObj:Object):void{
				player.sitInPlayer(passedPlayerObj);
				// player.getAvatar();
				if(passedPlayerObj.id == Main.clientPlayerId){
					Main.clientSeat = this;
				}
				
				var ds:DropShadowFilter = new DropShadowFilter();  
				ds.distance = 6;  
				ds.alpha = .6;  
				this.filters = [ds];
				drawSitIn();
			}
			
			
			private function drawSitIn():void{
				this.currentState = "filledSeat";
				this.refresh();
			}
			
			public function refresh():void{
				userName.text = player.getPlayerName();
				numChips.text = "$" + String(player.getStackSize());
								
			}
			
			public function sendChipsToPot(potLocation:Canvas):void{
				if(player.getBetChips() > 0){
					TweenLite.to(this.chipStack.chipStackView, 5, {alpha:0.5, x:potLocation.x, y:potLocation.y, ease:Back.easeOut, delay:2, onComplete:onFinishTween, onCompleteParams:[5, this.chipStack.chipStackView]});
				}
			}
		
			public function onFinishTween(argument1:Number, argument2:MovieClip):void {
				trace("The tween has finished! argument1 = " + argument1 + ", and argument2 = " + argument2);
			}
			
			public function dealPocketCardsClient(cards:Object):void{
				var tempCard1:Object = cards[0];
				var tempCard2:Object = cards[1];
				card1.calculateCardGraphics(tempCard1.suit, tempCard1.rank, Config.POCKETCARD_WIDTH,Config.POCKETCARD_HEIGHT,0,0);
				card2.calculateCardGraphics(tempCard2.suit, tempCard2.rank, Config.POCKETCARD_WIDTH,Config.POCKETCARD_HEIGHT,0+Config.POCKETCARD_WIDTH - 4,0);
			}
			
			public function dealPocketCardsOpponent():void{
				card1.loadHiddenCard(Config.POCKETCARD_WIDTH,Config.POCKETCARD_HEIGHT,0,0);
				card2.loadHiddenCard(Config.POCKETCARD_WIDTH,Config.POCKETCARD_HEIGHT,0+Config.POCKETCARD_WIDTH - 4,0);
			}
			
			private function drawStandUp():void{
				this.currentState = "empty";
			}
			
			public function chipsToBet(amount:int):void{
				if(player.getBetChips() > 0){
					chipStack.addToStack(amount);
					
				}else{
					//chipStack = new ChipStack(betLocation);
					chipStack.calculateGraphics(amount);
					
				}
			}
			
		]]>
	</mx:Script>
	<mx:Image source="images/seat/seatbutton_forflex.jpg" width="82" height="22" useHandCursor="true" click="showBuyInClicked()" verticalCenter="-4" horizontalCenter="0" id="image1"/>
</mx:Canvas>
