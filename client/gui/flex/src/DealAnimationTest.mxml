<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" xmlns:views="views.*" creationComplete="setup()">
	<mx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			import models.cards.CardDeck;
			import models.player.Player;
			import models.*;
			import models.utils.TweenLite;
			import views.*;
			
			import mx.controls.Image;
			
			public var playersObj:Object = null;
			
			public var player1:Player;
			public var player2:Player;
			public var player3:Player;
			public var player4:Player;
			public var player5:Player;
			
			
			
			public function setup():void{
				player1 = new Player(seat1);
				player1.id = 1;
				seat1.card1 = new CardDeck(cardLocation1);
				seat1.card2 = new CardDeck(cardLocation1);
				
				player3 = new Player(seat3);
				player3.id = 3;
				seat3.card1 = new CardDeck(cardLocation3);
				seat3.card2 = new CardDeck(cardLocation3);
				
				player4 = new Player(seat4);
				player4.id = 4;
				seat4.card1 = new CardDeck(cardLocation4);
				seat4.card2 = new CardDeck(cardLocation4);
			
				
				playersObj = [player1,player3,player4];
				
				
			
			}
			
			public function startDealBtnClicked():void{
				this.dealAnimation(playersObj);
				
			}
			
			public function dealAnimation(seatedPlayers:Object):void{
				trace("deal animation called");
				var startX:int = cardDeck.x;
				var startWidth:int = cardDeck.topCard.width;
				var startHeight:int = cardDeck.topCard.height;
				var startRotation:int = cardDeck.topCard.rotation;
				var startY:int = cardDeck.y;
				var delayCount:Number = .5;
				
				var newCard:Image;
					
				var numberDeal:Number = seatedPlayers.length;
				
				var firstCardCount:int = 1;
				function onFinishTween(cardImageUsed:Image):void{
						cardImageUsed.visible = false;
						//delete newCard;
				}
				
				var endX:Number = 0;
				var endY:Number = 0;
				var endRotation:Number = 0;
					
				for each(var x:Player in seatedPlayers){
					
					endX = x.playerSeat.card1.container.x;
					endY = x.playerSeat.card1.container.y;
					endRotation = x.playerSeat.card1.container.rotation;
					
					trace("current seat dealing cards to: " + x.id + " card: " + x.playerSeat.card1.container.x + " , " + x.playerSeat.card1.container.y);
					
					var newName:String = "container"+x+"card1";
					
					newCard = new Image();
					newCard.x = startX;
					newCard.y = startY;
					newCard.width = startWidth;
					newCard.height = startHeight;
					newCard.rotation = startRotation;
					newCard.source = "images/cards/back.png";
					this.addChild(newCard);
					var delay1:int = firstCardCount * .25;
					firstCardCount++;
					
					
					//TweenLite.to(newCard, 1, {alpha:1, x:endX, y:endY, rotation:endRotation, delay:delayCount, visible:false, overwrite:false, onComplete:onFinishTween, onCompleteParams:{newCard:newCard}});
				    TweenLite.to(newCard, 1, {alpha:1, x:endX, y:endY, rotation:endRotation, delay:delayCount, visible:false, overwrite:true});
				
					delayCount = delayCount + .25;
				}
				
				var secondCardCount:int = 1;
				for each(var y:Player in seatedPlayers){
					
					//seatName = seats[x];
					trace("current seat dealing cards to: " + y.id);
					
					endX = y.playerSeat.card1.container.x;
					endY = y.playerSeat.card1.container.y;
					endRotation = y.playerSeat.card1.container.rotation;
					
					
					
					newCard = new Image();
					newCard.x = startX;
					newCard.y = startY;
					newCard.width = startWidth;
					newCard.height = startHeight;
					newCard.rotation = startRotation;
					newCard.source = "images/cards/back.png";
					
					this.addChild(newCard);
					var delay2:int = secondCardCount * .25;
					secondCardCount++;
					
				    TweenLite.to(newCard, 1, {alpha:1, x:endX, y:endY, rotation:endRotation, delay:delayCount, visible:false, overwrite:true});
				
					delayCount = delayCount + .25;
				}
			}
			
			
		]]>
	</mx:Script>
	
	<mx:Canvas x="480" y="115" id="cardLocation0" />
	<mx:Canvas x="565" y="145" id="cardLocation1" />
	<mx:Canvas x="596" y="246" id="cardLocation2" />
	<mx:Canvas x="568" y="301" id="cardLocation3" />
	<mx:Canvas x="458" y="328" id="cardLocation4" />
	<mx:Canvas x="223" y="327" id="cardLocation5" />
	<mx:Canvas x="135" y="307" id="cardLocation6" />
	<mx:Canvas x="85" y="239" id="cardLocation7" />
	<mx:Canvas x="108" y="142" id="cardLocation8" />
	<mx:Canvas x="234" y="121" id="cardLocation9" />
	<views:Seat x="480" y="0" id="seat0" seatNumber="0" verticalScrollPolicy="off" horizontalScrollPolicy="off">
	</views:Seat>
	<views:Seat x="636" y="46" id="seat1" seatNumber="1" verticalScrollPolicy="off" horizontalScrollPolicy="off">
	</views:Seat>
	<views:Seat x="668" y="207" id="seat2" seatNumber="2" verticalScrollPolicy="off" horizontalScrollPolicy="off">
	</views:Seat>
	<views:Seat x="617" y="353" id="seat3" seatNumber="3" verticalScrollPolicy="off" horizontalScrollPolicy="off">
	</views:Seat>
	<views:Seat x="458" y="384" id="seat4" seatNumber="4" verticalScrollPolicy="off" horizontalScrollPolicy="off">
	</views:Seat>
	<views:Seat x="214" y="384" id="seat5" seatNumber="5" verticalScrollPolicy="off" horizontalScrollPolicy="off">
	</views:Seat>
	<views:Seat x="54" y="338" id="seat6" seatNumber="6" verticalScrollPolicy="off" horizontalScrollPolicy="off">
	</views:Seat>
	<views:Seat x="0" y="207" id="seat7" seatNumber="7" verticalScrollPolicy="off" horizontalScrollPolicy="off">
	</views:Seat>
	<views:Seat x="24" y="46" id="seat8" seatNumber="8" verticalScrollPolicy="off" horizontalScrollPolicy="off">
	</views:Seat>
	<views:Seat x="195" y="0" id="seat9" seatNumber="9" verticalScrollPolicy="off" horizontalScrollPolicy="off">
	</views:Seat>
	<mx:Button x="336" y="299" label="Start Deal Animation Test" id="dealStartBtn" click="startDealBtnClicked()"/>
	
	<views:DealerCardDeck id="cardDeck" x="407.25" y="98.25"/>
	
</mx:Application>
